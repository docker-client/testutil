import java.text.SimpleDateFormat

buildscript {
    ext {
        kotlin_version = "1.3.10"
    }

    repositories {
        mavenLocal()
        jcenter()
        maven { url = "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }

    dependencies {
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.net.ossindex:ossindex-gradle-plugin:0.3.21"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

ext {
    artifactVersion = new SimpleDateFormat('yyyy-MM-dd\'T\'HH-mm-ss').format(new Date())
    bintrayDryRun = false
}

apply plugin: "kotlin"
apply plugin: "net.ossindex.audit"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"
apply plugin: "com.github.ben-manes.versions"

group = 'de.gesellix'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

def dependencyVersions = [
]

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force dependencyVersions
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'ch.qos.logback:logback-classic:1.2.3'

    testCompile "org.jetbrains.kotlin:kotlin-test"
    testCompile("org.jetbrains.spek:spek-api:1.2.1") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:1.2.1") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime "org.junit.platform:junit-platform-launcher:1.3.2"
}

test {
    useJUnitPlatform {
        includeEngines 'spek'
    }
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        testutil(MavenPublication) {
            artifactId 'testutil'
            version artifactVersion
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER ?: project["bintray.user"]
    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
    publications = ['testutil']
    pkg {
        repo = 'docker-utils'
        name = 'testutil'
        desc = 'Test utilities for the docker-utils libraries'
        licenses = ['MIT']
        labels = ['docker', 'util', 'test', 'java']
        version = [
                name: artifactVersion
        ]
        vcsUrl = 'https://github.com/docker-client/testutil.git'
    }
    dryRun = bintrayDryRun
}
bintrayUpload.dependsOn build

task updateWrapper(type: Wrapper) {
    gradleVersion = '4.10.2'
    distributionType = Wrapper.DistributionType.ALL
}
